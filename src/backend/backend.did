type Name = text;
type AvatarUrl = text;

type UserProfile = record {
  address : text;
  name : text;
  avatar_url : text;
};

type GetMyProfileResponse = variant {
  Ok : UserProfile;
  Err : text;
};

type SaveMyProfileResponse = variant {
  Ok : UserProfile;
  Err : text;
};

type ListProfilesResponse = variant {
  Ok : vec record { text; UserProfile };
  Err : text;
};

type Proposal = record {
  id: nat64;
  title: text;
  description: text;
  proposal_type: text;
  submitter: text;
  submitter_eth_address: text;
  timestamp: nat64;
  yes_votes: nat64;
  no_votes: nat64;
};

service : (siwe_provider_canister : text) -> {
  "get_my_profile" : () -> (GetMyProfileResponse) query;
  "save_my_profile" : (Name, AvatarUrl) -> (SaveMyProfileResponse);
  "list_profiles" : () -> (ListProfilesResponse) query;
  "submit_proposal": (text, text, text, text) -> (nat64);
  "get_proposals": () -> (vec Proposal) query;
  "vote_on_proposal": (nat64, bool) -> ();
};
